<!DOCTYPE html><html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Happy Birthday Shraddha ðŸŽ‚</title>
  <style>
    body {
      margin: 0;
      overflow: hidden;
      font-family: 'Segoe UI', sans-serif;
      background: linear-gradient(to bottom, #ffdee9, #b5fffc);
      color: #fff;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      flex-direction: column;
    }
    canvas {
      position: absolute;
      top: 0;
      left: 0;
      z-index: 0;
    }
    .container {
      z-index: 1;
      text-align: center;
      animation: fadeIn 2s ease-in-out;
    }
    h1 {
      font-size: 3rem;
      margin: 0.5em 0;
    }
    p {
      font-size: 1.2rem;
      max-width: 600px;
      margin: 1em auto;
    }
    .signature {
      font-style: italic;
      margin-top: 2em;
      font-size: 1.3rem;
    }
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
  </style>
</head>
<body>
  <canvas id="bg"></canvas>
  <div class="container">
    <h1>ðŸŽ‰ Happy Birthday Shraddha ðŸŽ‚</h1>
    <p>Wishing you a day filled with love, joy, and unforgettable moments. Youâ€™re special, and today is all about celebrating the beautiful soul that you are!</p>
    <p class="signature">â€” A small surprise from Ashish ðŸ’Œ</p>
  </div>  <audio autoplay loop>
    <source src="https://www.bensound.com/bensound-music/bensound-smile.mp3" type="audio/mp3" />
    Your browser does not support the audio element.
  </audio>  <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>  <script>
    // Simple 3D background animation with Three.js
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer({ canvas: document.getElementById('bg'), alpha: true });
    renderer.setSize(window.innerWidth, window.innerHeight);

    const geometry = new THREE.TorusKnotGeometry(10, 3, 100, 16);
    const material = new THREE.MeshStandardMaterial({ color: 0xff69b4, wireframe: true });
    const torus = new THREE.Mesh(geometry, material);
    scene.add(torus);

    const light = new THREE.PointLight(0xffffff);
    light.position.set(20, 20, 20);
    scene.add(light);

    camera.position.z = 30;

    function animate() {
      requestAnimationFrame(animate);
      torus.rotation.x += 0.01;
      torus.rotation.y += 0.01;
      renderer.render(scene, camera);
    }

    animate();
    window.addEventListener('resize', () => {
      camera.aspect = window.innerWidth / window.innerHeight;
      camera.updateProjectionMatrix();
      renderer.setSize(window.innerWidth, window.innerHeight);
    });
  </script></body>
</html>
